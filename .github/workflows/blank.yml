name: CI/CD to AKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ACR_LOGIN_SERVER: tododevopsacr.azurecr.io
  RESOURCE_GROUP: todo-devops-rg
  AKS_CLUSTER_NAME: tododevopsaks
  IMAGE_NAME: todo-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and Push Docker Image
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin
        
        docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker tag ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
        
        docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - name: Get AKS Credentials
      run: |
        az aks get-credentials \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --name ${{ env.AKS_CLUSTER_NAME }} \
          --overwrite-existing

    - name: Update manifest with ACR and Build ID
      run: |
        sed -i "s|<ACR_LOGIN_SERVER>|${{ env.ACR_LOGIN_SERVER }}|g" kubernetes/deployment.yaml
        sed -i "s|<BUILD_ID>|${{ github.sha }}|g" kubernetes/deployment.yaml

    - name: Deploy to AKS
      run: |
        kubectl apply -f kubernetes/
        
        kubectl set image deployment/todo-app-deployment \
          todo-app-container=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        kubectl rollout status deployment/todo-app-deployment --timeout=300s
